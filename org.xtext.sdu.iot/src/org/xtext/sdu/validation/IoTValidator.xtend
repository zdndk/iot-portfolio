/*
 * generated by Xtext 2.16.0
 */
package org.xtext.sdu.validation

import org.xtext.sdu.ioT.Portnumber
import org.eclipse.xtext.validation.Check
import org.xtext.sdu.ioT.IoTPackage
import org.xtext.sdu.ioT.Ip

/**a
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class IoTValidator extends AbstractIoTValidator {
	
	/*
	public static val INVALID_NAME = 'invalidName'

	@Check
	def checkGreetingStartsWithCapital(Greeting greeting) {
		if (!Character.isUpperCase(greeting.name.charAt(0))) {
			warning('Name should start with a capital', 
					IoTPackage.Literals.GREETING__NAME,
					INVALID_NAME)
		}
	} */

	@Check
	def portnumberWithinRange(Portnumber portnumber) {
		if (portnumber.getNumber() <= 1024 || portnumber.getNumber() > (49151)) {
			warning('It is recommended that port number should be within 1025-49151, as ports outside this range is reserved', IoTPackage.Literals.PORTNUMBER__NUMBER, 'unsafe or invalid port number')		
		}
		
		if (portnumber.getNumber() <= 0 || portnumber.getNumber() > 65535) {
			error('Invalid port number, has to be within 0 to 65535', IoTPackage.Literals.PORTNUMBER__NUMBER, 'Port number outside of valid range')
		}
	}
	
	@Check
	def ipWithinRange(Ip ip) {
		for (int num : ip.getIp())
			if(num < 0 || num > 255)
				error('All ip numbers must be in range 0-255', IoTPackage.Literals.IP__IP, 'invalid ip number range(s)')
	}
}
