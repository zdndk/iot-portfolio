/*
 * generated by Xtext 2.16.0
 */
grammar InternalIoT;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package org.xtext.sdu.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.sdu.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.sdu.services.IoTGrammarAccess;

}
@parser::members {
	private IoTGrammarAccess grammarAccess;

	public void setGrammarAccess(IoTGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleSystem
entryRuleSystem
:
{ before(grammarAccess.getSystemRule()); }
	 ruleSystem
{ after(grammarAccess.getSystemRule()); } 
	 EOF 
;

// Rule System
ruleSystem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getSystemAccess().getSystemAssignment()); }
			(rule__System__SystemAssignment)
			{ after(grammarAccess.getSystemAccess().getSystemAssignment()); }
		)
		(
			{ before(grammarAccess.getSystemAccess().getSystemAssignment()); }
			(rule__System__SystemAssignment)*
			{ after(grammarAccess.getSystemAccess().getSystemAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSensorType
entryRuleSensorType
:
{ before(grammarAccess.getSensorTypeRule()); }
	 ruleSensorType
{ after(grammarAccess.getSensorTypeRule()); } 
	 EOF 
;

// Rule SensorType
ruleSensorType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSensorTypeAccess().getNameAssignment()); }
		(rule__SensorType__NameAssignment)
		{ after(grammarAccess.getSensorTypeAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSensorTypes
entryRuleSensorTypes
:
{ before(grammarAccess.getSensorTypesRule()); }
	 ruleSensorTypes
{ after(grammarAccess.getSensorTypesRule()); } 
	 EOF 
;

// Rule SensorTypes
ruleSensorTypes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSensorTypesAccess().getGroup()); }
		(rule__SensorTypes__Group__0)
		{ after(grammarAccess.getSensorTypesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSensor
entryRuleSensor
:
{ before(grammarAccess.getSensorRule()); }
	 ruleSensor
{ after(grammarAccess.getSensorRule()); } 
	 EOF 
;

// Rule Sensor
ruleSensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSensorAccess().getGroup()); }
		(rule__Sensor__Group__0)
		{ after(grammarAccess.getSensorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSensorGroup
entryRuleSensorGroup
:
{ before(grammarAccess.getSensorGroupRule()); }
	 ruleSensorGroup
{ after(grammarAccess.getSensorGroupRule()); } 
	 EOF 
;

// Rule SensorGroup
ruleSensorGroup 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSensorGroupAccess().getGroup()); }
		(rule__SensorGroup__Group__0)
		{ after(grammarAccess.getSensorGroupAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSensorGetMethod
entryRuleSensorGetMethod
:
{ before(grammarAccess.getSensorGetMethodRule()); }
	 ruleSensorGetMethod
{ after(grammarAccess.getSensorGetMethodRule()); } 
	 EOF 
;

// Rule SensorGetMethod
ruleSensorGetMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSensorGetMethodAccess().getGroup()); }
		(rule__SensorGetMethod__Group__0)
		{ after(grammarAccess.getSensorGetMethodAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethod
entryRuleMethod
:
{ before(grammarAccess.getMethodRule()); }
	 ruleMethod
{ after(grammarAccess.getMethodRule()); } 
	 EOF 
;

// Rule Method
ruleMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodAccess().getGroup()); }
		(rule__Method__Group__0)
		{ after(grammarAccess.getMethodAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeviceType
entryRuleDeviceType
:
{ before(grammarAccess.getDeviceTypeRule()); }
	 ruleDeviceType
{ after(grammarAccess.getDeviceTypeRule()); } 
	 EOF 
;

// Rule DeviceType
ruleDeviceType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeviceTypeAccess().getNameAssignment()); }
		(rule__DeviceType__NameAssignment)
		{ after(grammarAccess.getDeviceTypeAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeviceTypes
entryRuleDeviceTypes
:
{ before(grammarAccess.getDeviceTypesRule()); }
	 ruleDeviceTypes
{ after(grammarAccess.getDeviceTypesRule()); } 
	 EOF 
;

// Rule DeviceTypes
ruleDeviceTypes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeviceTypesAccess().getGroup()); }
		(rule__DeviceTypes__Group__0)
		{ after(grammarAccess.getDeviceTypesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDevice
entryRuleDevice
:
{ before(grammarAccess.getDeviceRule()); }
	 ruleDevice
{ after(grammarAccess.getDeviceRule()); } 
	 EOF 
;

// Rule Device
ruleDevice 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeviceAccess().getGroup()); }
		(rule__Device__Group__0)
		{ after(grammarAccess.getDeviceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleServerType
entryRuleServerType
:
{ before(grammarAccess.getServerTypeRule()); }
	 ruleServerType
{ after(grammarAccess.getServerTypeRule()); } 
	 EOF 
;

// Rule ServerType
ruleServerType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getServerTypeAccess().getNameAssignment()); }
		(rule__ServerType__NameAssignment)
		{ after(grammarAccess.getServerTypeAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleServerTypes
entryRuleServerTypes
:
{ before(grammarAccess.getServerTypesRule()); }
	 ruleServerTypes
{ after(grammarAccess.getServerTypesRule()); } 
	 EOF 
;

// Rule ServerTypes
ruleServerTypes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getServerTypesAccess().getGroup()); }
		(rule__ServerTypes__Group__0)
		{ after(grammarAccess.getServerTypesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleServer
entryRuleServer
:
{ before(grammarAccess.getServerRule()); }
	 ruleServer
{ after(grammarAccess.getServerRule()); } 
	 EOF 
;

// Rule Server
ruleServer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getServerAccess().getGroup()); }
		(rule__Server__Group__0)
		{ after(grammarAccess.getServerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDestinationType
entryRuleDestinationType
:
{ before(grammarAccess.getDestinationTypeRule()); }
	 ruleDestinationType
{ after(grammarAccess.getDestinationTypeRule()); } 
	 EOF 
;

// Rule DestinationType
ruleDestinationType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDestinationTypeAccess().getNameAssignment()); }
		(rule__DestinationType__NameAssignment)
		{ after(grammarAccess.getDestinationTypeAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDestinationTypes
entryRuleDestinationTypes
:
{ before(grammarAccess.getDestinationTypesRule()); }
	 ruleDestinationTypes
{ after(grammarAccess.getDestinationTypesRule()); } 
	 EOF 
;

// Rule DestinationTypes
ruleDestinationTypes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDestinationTypesAccess().getGroup()); }
		(rule__DestinationTypes__Group__0)
		{ after(grammarAccess.getDestinationTypesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDestination
entryRuleDestination
:
{ before(grammarAccess.getDestinationRule()); }
	 ruleDestination
{ after(grammarAccess.getDestinationRule()); } 
	 EOF 
;

// Rule Destination
ruleDestination 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDestinationAccess().getGroup()); }
		(rule__Destination__Group__0)
		{ after(grammarAccess.getDestinationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFetchData
entryRuleFetchData
:
{ before(grammarAccess.getFetchDataRule()); }
	 ruleFetchData
{ after(grammarAccess.getFetchDataRule()); } 
	 EOF 
;

// Rule FetchData
ruleFetchData 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFetchDataAccess().getGroup()); }
		(rule__FetchData__Group__0)
		{ after(grammarAccess.getFetchDataAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFetchDataExpression
entryRuleFetchDataExpression
:
{ before(grammarAccess.getFetchDataExpressionRule()); }
	 ruleFetchDataExpression
{ after(grammarAccess.getFetchDataExpressionRule()); } 
	 EOF 
;

// Rule FetchDataExpression
ruleFetchDataExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFetchDataExpressionAccess().getGroup()); }
		(rule__FetchDataExpression__Group__0)
		{ after(grammarAccess.getFetchDataExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFetchDataCondition
entryRuleFetchDataCondition
:
{ before(grammarAccess.getFetchDataConditionRule()); }
	 ruleFetchDataCondition
{ after(grammarAccess.getFetchDataConditionRule()); } 
	 EOF 
;

// Rule FetchDataCondition
ruleFetchDataCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFetchDataConditionAccess().getGroup()); }
		(rule__FetchDataCondition__Group__0)
		{ after(grammarAccess.getFetchDataConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeUnit
entryRuleTimeUnit
:
{ before(grammarAccess.getTimeUnitRule()); }
	 ruleTimeUnit
{ after(grammarAccess.getTimeUnitRule()); } 
	 EOF 
;

// Rule TimeUnit
ruleTimeUnit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeUnitAccess().getAlternatives()); }
		(rule__TimeUnit__Alternatives)
		{ after(grammarAccess.getTimeUnitAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getOrConditionParserRuleCall()); }
		ruleOrCondition
		{ after(grammarAccess.getConditionAccess().getOrConditionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrCondition
entryRuleOrCondition
:
{ before(grammarAccess.getOrConditionRule()); }
	 ruleOrCondition
{ after(grammarAccess.getOrConditionRule()); } 
	 EOF 
;

// Rule OrCondition
ruleOrCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrConditionAccess().getGroup()); }
		(rule__OrCondition__Group__0)
		{ after(grammarAccess.getOrConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndCondition
entryRuleAndCondition
:
{ before(grammarAccess.getAndConditionRule()); }
	 ruleAndCondition
{ after(grammarAccess.getAndConditionRule()); } 
	 EOF 
;

// Rule AndCondition
ruleAndCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndConditionAccess().getGroup()); }
		(rule__AndCondition__Group__0)
		{ after(grammarAccess.getAndConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparisonCondition
entryRuleComparisonCondition
:
{ before(grammarAccess.getComparisonConditionRule()); }
	 ruleComparisonCondition
{ after(grammarAccess.getComparisonConditionRule()); } 
	 EOF 
;

// Rule ComparisonCondition
ruleComparisonCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonConditionAccess().getGroup()); }
		(rule__ComparisonCondition__Group__0)
		{ after(grammarAccess.getComparisonConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryCondition
entryRulePrimaryCondition
:
{ before(grammarAccess.getPrimaryConditionRule()); }
	 rulePrimaryCondition
{ after(grammarAccess.getPrimaryConditionRule()); } 
	 EOF 
;

// Rule PrimaryCondition
rulePrimaryCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryConditionAccess().getAlternatives()); }
		(rule__PrimaryCondition__Alternatives)
		{ after(grammarAccess.getPrimaryConditionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteralBoolean
entryRuleLiteralBoolean
:
{ before(grammarAccess.getLiteralBooleanRule()); }
	 ruleLiteralBoolean
{ after(grammarAccess.getLiteralBooleanRule()); } 
	 EOF 
;

// Rule LiteralBoolean
ruleLiteralBoolean 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralBooleanAccess().getAlternatives()); }
		(rule__LiteralBoolean__Alternatives)
		{ after(grammarAccess.getLiteralBooleanAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteralMethod
entryRuleLiteralMethod
:
{ before(grammarAccess.getLiteralMethodRule()); }
	 ruleLiteralMethod
{ after(grammarAccess.getLiteralMethodRule()); } 
	 EOF 
;

// Rule LiteralMethod
ruleLiteralMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralMethodAccess().getMethodParserRuleCall()); }
		ruleMethod
		{ after(grammarAccess.getLiteralMethodAccess().getMethodParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteralInteger
entryRuleLiteralInteger
:
{ before(grammarAccess.getLiteralIntegerRule()); }
	 ruleLiteralInteger
{ after(grammarAccess.getLiteralIntegerRule()); } 
	 EOF 
;

// Rule LiteralInteger
ruleLiteralInteger 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralIntegerAccess().getGroup()); }
		(rule__LiteralInteger__Group__0)
		{ after(grammarAccess.getLiteralIntegerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIp
entryRuleIp
:
{ before(grammarAccess.getIpRule()); }
	 ruleIp
{ after(grammarAccess.getIpRule()); } 
	 EOF 
;

// Rule Ip
ruleIp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIpAccess().getGroup()); }
		(rule__Ip__Group__0)
		{ after(grammarAccess.getIpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePortnumber
entryRulePortnumber
:
{ before(grammarAccess.getPortnumberRule()); }
	 rulePortnumber
{ after(grammarAccess.getPortnumberRule()); } 
	 EOF 
;

// Rule Portnumber
rulePortnumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPortnumberAccess().getGroup()); }
		(rule__Portnumber__Group__0)
		{ after(grammarAccess.getPortnumberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTime
entryRuleTime
:
{ before(grammarAccess.getTimeRule()); }
	 ruleTime
{ after(grammarAccess.getTimeRule()); } 
	 EOF 
;

// Rule Time
ruleTime 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeAccess().getTimeAssignment()); }
		(rule__Time__TimeAssignment)
		{ after(grammarAccess.getTimeAccess().getTimeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__SystemAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemAccess().getSystemSensorTypesParserRuleCall_0_0()); }
		ruleSensorTypes
		{ after(grammarAccess.getSystemAccess().getSystemSensorTypesParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSystemAccess().getSystemSensorParserRuleCall_0_1()); }
		ruleSensor
		{ after(grammarAccess.getSystemAccess().getSystemSensorParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getSystemAccess().getSystemSensorGroupParserRuleCall_0_2()); }
		ruleSensorGroup
		{ after(grammarAccess.getSystemAccess().getSystemSensorGroupParserRuleCall_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getSystemAccess().getSystemSensorGetMethodParserRuleCall_0_3()); }
		ruleSensorGetMethod
		{ after(grammarAccess.getSystemAccess().getSystemSensorGetMethodParserRuleCall_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getSystemAccess().getSystemDeviceTypesParserRuleCall_0_4()); }
		ruleDeviceTypes
		{ after(grammarAccess.getSystemAccess().getSystemDeviceTypesParserRuleCall_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getSystemAccess().getSystemDeviceParserRuleCall_0_5()); }
		ruleDevice
		{ after(grammarAccess.getSystemAccess().getSystemDeviceParserRuleCall_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getSystemAccess().getSystemServerTypesParserRuleCall_0_6()); }
		ruleServerTypes
		{ after(grammarAccess.getSystemAccess().getSystemServerTypesParserRuleCall_0_6()); }
	)
	|
	(
		{ before(grammarAccess.getSystemAccess().getSystemServerParserRuleCall_0_7()); }
		ruleServer
		{ after(grammarAccess.getSystemAccess().getSystemServerParserRuleCall_0_7()); }
	)
	|
	(
		{ before(grammarAccess.getSystemAccess().getSystemDestinationTypesParserRuleCall_0_8()); }
		ruleDestinationTypes
		{ after(grammarAccess.getSystemAccess().getSystemDestinationTypesParserRuleCall_0_8()); }
	)
	|
	(
		{ before(grammarAccess.getSystemAccess().getSystemDestinationParserRuleCall_0_9()); }
		ruleDestination
		{ after(grammarAccess.getSystemAccess().getSystemDestinationParserRuleCall_0_9()); }
	)
	|
	(
		{ before(grammarAccess.getSystemAccess().getSystemFetchDataParserRuleCall_0_10()); }
		ruleFetchData
		{ after(grammarAccess.getSystemAccess().getSystemFetchDataParserRuleCall_0_10()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Alternatives_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceAccess().getGroup_6_0()); }
		(rule__Device__Group_6_0__0)
		{ after(grammarAccess.getDeviceAccess().getGroup_6_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeviceAccess().getGroup_6_1()); }
		(rule__Device__Group_6_1__0)
		{ after(grammarAccess.getDeviceAccess().getGroup_6_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFetchDataAccess().getGroup_3_0()); }
		(rule__FetchData__Group_3_0__0)
		{ after(grammarAccess.getFetchDataAccess().getGroup_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getFetchDataAccess().getGroup_3_1()); }
		(rule__FetchData__Group_3_1__0)
		{ after(grammarAccess.getFetchDataAccess().getGroup_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Alternatives_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFetchDataAccess().getGroup_8_0()); }
		(rule__FetchData__Group_8_0__0)
		{ after(grammarAccess.getFetchDataAccess().getGroup_8_0()); }
	)
	|
	(
		{ before(grammarAccess.getFetchDataAccess().getGroup_8_1()); }
		(rule__FetchData__Group_8_1__0)
		{ after(grammarAccess.getFetchDataAccess().getGroup_8_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeUnit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeUnitAccess().getMsKeyword_0()); }
		'ms'
		{ after(grammarAccess.getTimeUnitAccess().getMsKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitAccess().getSKeyword_1()); }
		's'
		{ after(grammarAccess.getTimeUnitAccess().getSKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitAccess().getMKeyword_2()); }
		'm'
		{ after(grammarAccess.getTimeUnitAccess().getMKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitAccess().getHKeyword_3()); }
		'h'
		{ after(grammarAccess.getTimeUnitAccess().getHKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonCondition__OperatorAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonConditionAccess().getOperatorLessThanSignKeyword_1_1_0_0()); }
		'<'
		{ after(grammarAccess.getComparisonConditionAccess().getOperatorLessThanSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonConditionAccess().getOperatorLessThanSignEqualsSignKeyword_1_1_0_1()); }
		'<='
		{ after(grammarAccess.getComparisonConditionAccess().getOperatorLessThanSignEqualsSignKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonConditionAccess().getOperatorEqualsSignEqualsSignKeyword_1_1_0_2()); }
		'=='
		{ after(grammarAccess.getComparisonConditionAccess().getOperatorEqualsSignEqualsSignKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonConditionAccess().getOperatorGreaterThanSignEqualsSignKeyword_1_1_0_3()); }
		'>='
		{ after(grammarAccess.getComparisonConditionAccess().getOperatorGreaterThanSignEqualsSignKeyword_1_1_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonConditionAccess().getOperatorGreaterThanSignKeyword_1_1_0_4()); }
		'>'
		{ after(grammarAccess.getComparisonConditionAccess().getOperatorGreaterThanSignKeyword_1_1_0_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryCondition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryConditionAccess().getGroup_0()); }
		(rule__PrimaryCondition__Group_0__0)
		{ after(grammarAccess.getPrimaryConditionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryConditionAccess().getLiteralBooleanParserRuleCall_1()); }
		ruleLiteralBoolean
		{ after(grammarAccess.getPrimaryConditionAccess().getLiteralBooleanParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryConditionAccess().getLiteralIntegerParserRuleCall_2()); }
		ruleLiteralInteger
		{ after(grammarAccess.getPrimaryConditionAccess().getLiteralIntegerParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryConditionAccess().getLiteralMethodParserRuleCall_3()); }
		ruleLiteralMethod
		{ after(grammarAccess.getPrimaryConditionAccess().getLiteralMethodParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralBoolean__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralBooleanAccess().getGroup_0()); }
		(rule__LiteralBoolean__Group_0__0)
		{ after(grammarAccess.getLiteralBooleanAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralBooleanAccess().getGroup_1()); }
		(rule__LiteralBoolean__Group_1__0)
		{ after(grammarAccess.getLiteralBooleanAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorTypes__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorTypes__Group__0__Impl
	rule__SensorTypes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorTypes__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorTypesAccess().getSensorTypesKeyword_0()); }
	'SensorTypes'
	{ after(grammarAccess.getSensorTypesAccess().getSensorTypesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorTypes__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorTypes__Group__1__Impl
	rule__SensorTypes__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorTypes__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorTypesAccess().getTypesAssignment_1()); }
	(rule__SensorTypes__TypesAssignment_1)
	{ after(grammarAccess.getSensorTypesAccess().getTypesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorTypes__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorTypes__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorTypes__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorTypesAccess().getGroup_2()); }
	(rule__SensorTypes__Group_2__0)*
	{ after(grammarAccess.getSensorTypesAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SensorTypes__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorTypes__Group_2__0__Impl
	rule__SensorTypes__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorTypes__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorTypesAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getSensorTypesAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorTypes__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorTypes__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorTypes__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorTypesAccess().getTypesAssignment_2_1()); }
	(rule__SensorTypes__TypesAssignment_2_1)
	{ after(grammarAccess.getSensorTypesAccess().getTypesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sensor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__0__Impl
	rule__Sensor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getSensorKeyword_0()); }
	'Sensor'
	{ after(grammarAccess.getSensorAccess().getSensorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__1__Impl
	rule__Sensor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getNameAssignment_1()); }
	(rule__Sensor__NameAssignment_1)
	{ after(grammarAccess.getSensorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__2__Impl
	rule__Sensor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getOfKeyword_2()); }
	'of'
	{ after(grammarAccess.getSensorAccess().getOfKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__3__Impl
	rule__Sensor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getTypeKeyword_3()); }
	'type'
	{ after(grammarAccess.getSensorAccess().getTypeKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getTypeAssignment_4()); }
	(rule__Sensor__TypeAssignment_4)
	{ after(grammarAccess.getSensorAccess().getTypeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SensorGroup__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorGroup__Group__0__Impl
	rule__SensorGroup__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorGroup__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorGroupAccess().getSensorGroupKeyword_0()); }
	'SensorGroup'
	{ after(grammarAccess.getSensorGroupAccess().getSensorGroupKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorGroup__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorGroup__Group__1__Impl
	rule__SensorGroup__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorGroup__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorGroupAccess().getNameAssignment_1()); }
	(rule__SensorGroup__NameAssignment_1)
	{ after(grammarAccess.getSensorGroupAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorGroup__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorGroup__Group__2__Impl
	rule__SensorGroup__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorGroup__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorGroupAccess().getIncludeKeyword_2()); }
	'include'
	{ after(grammarAccess.getSensorGroupAccess().getIncludeKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorGroup__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorGroup__Group__3__Impl
	rule__SensorGroup__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorGroup__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorGroupAccess().getSensorsAssignment_3()); }
	(rule__SensorGroup__SensorsAssignment_3)
	{ after(grammarAccess.getSensorGroupAccess().getSensorsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorGroup__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorGroup__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorGroup__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorGroupAccess().getGroup_4()); }
	(rule__SensorGroup__Group_4__0)*
	{ after(grammarAccess.getSensorGroupAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SensorGroup__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorGroup__Group_4__0__Impl
	rule__SensorGroup__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorGroup__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorGroupAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getSensorGroupAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorGroup__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorGroup__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorGroup__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorGroupAccess().getSensorsAssignment_4_1()); }
	(rule__SensorGroup__SensorsAssignment_4_1)
	{ after(grammarAccess.getSensorGroupAccess().getSensorsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SensorGetMethod__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorGetMethod__Group__0__Impl
	rule__SensorGetMethod__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorGetMethod__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorGetMethodAccess().getSensorGetMethodKeyword_0()); }
	'SensorGetMethod'
	{ after(grammarAccess.getSensorGetMethodAccess().getSensorGetMethodKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorGetMethod__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorGetMethod__Group__1__Impl
	rule__SensorGetMethod__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorGetMethod__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorGetMethodAccess().getMethodAssignment_1()); }
	(rule__SensorGetMethod__MethodAssignment_1)
	{ after(grammarAccess.getSensorGetMethodAccess().getMethodAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorGetMethod__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorGetMethod__Group__2__Impl
	rule__SensorGetMethod__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorGetMethod__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorGetMethodAccess().getForKeyword_2()); }
	'for'
	{ after(grammarAccess.getSensorGetMethodAccess().getForKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorGetMethod__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorGetMethod__Group__3__Impl
	rule__SensorGetMethod__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorGetMethod__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorGetMethodAccess().getTypeKeyword_3()); }
	'type'
	{ after(grammarAccess.getSensorGetMethodAccess().getTypeKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorGetMethod__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorGetMethod__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorGetMethod__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorGetMethodAccess().getTypeAssignment_4()); }
	(rule__SensorGetMethod__TypeAssignment_4)
	{ after(grammarAccess.getSensorGetMethodAccess().getTypeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__0__Impl
	rule__Method__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getNameAssignment_0()); }
	(rule__Method__NameAssignment_0)
	{ after(grammarAccess.getMethodAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__1__Impl
	rule__Method__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getMethodAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__2__Impl
	rule__Method__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getGroup_2()); }
	(rule__Method__Group_2__0)?
	{ after(grammarAccess.getMethodAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getMethodAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_2__0__Impl
	rule__Method__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getParametersAssignment_2_0()); }
	(rule__Method__ParametersAssignment_2_0)
	{ after(grammarAccess.getMethodAccess().getParametersAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getGroup_2_1()); }
	(rule__Method__Group_2_1__0)*
	{ after(grammarAccess.getMethodAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_2_1__0__Impl
	rule__Method__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getMethodAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getParametersAssignment_2_1_1()); }
	(rule__Method__ParametersAssignment_2_1_1)
	{ after(grammarAccess.getMethodAccess().getParametersAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeviceTypes__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceTypes__Group__0__Impl
	rule__DeviceTypes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceTypes__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceTypesAccess().getDeviceTypesKeyword_0()); }
	'DeviceTypes'
	{ after(grammarAccess.getDeviceTypesAccess().getDeviceTypesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceTypes__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceTypes__Group__1__Impl
	rule__DeviceTypes__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceTypes__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceTypesAccess().getTypesAssignment_1()); }
	(rule__DeviceTypes__TypesAssignment_1)
	{ after(grammarAccess.getDeviceTypesAccess().getTypesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceTypes__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceTypes__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceTypes__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceTypesAccess().getGroup_2()); }
	(rule__DeviceTypes__Group_2__0)*
	{ after(grammarAccess.getDeviceTypesAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeviceTypes__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceTypes__Group_2__0__Impl
	rule__DeviceTypes__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceTypes__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceTypesAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getDeviceTypesAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceTypes__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceTypes__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceTypes__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceTypesAccess().getTypesAssignment_2_1()); }
	(rule__DeviceTypes__TypesAssignment_2_1)
	{ after(grammarAccess.getDeviceTypesAccess().getTypesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Device__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Device__Group__0__Impl
	rule__Device__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceAccess().getDeviceKeyword_0()); }
	'Device'
	{ after(grammarAccess.getDeviceAccess().getDeviceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Device__Group__1__Impl
	rule__Device__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceAccess().getNameAssignment_1()); }
	(rule__Device__NameAssignment_1)
	{ after(grammarAccess.getDeviceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Device__Group__2__Impl
	rule__Device__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceAccess().getOfKeyword_2()); }
	'of'
	{ after(grammarAccess.getDeviceAccess().getOfKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Device__Group__3__Impl
	rule__Device__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceAccess().getTypeKeyword_3()); }
	'type'
	{ after(grammarAccess.getDeviceAccess().getTypeKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Device__Group__4__Impl
	rule__Device__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceAccess().getTypeAssignment_4()); }
	(rule__Device__TypeAssignment_4)
	{ after(grammarAccess.getDeviceAccess().getTypeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Device__Group__5__Impl
	rule__Device__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceAccess().getContainsKeyword_5()); }
	'contains'
	{ after(grammarAccess.getDeviceAccess().getContainsKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Device__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceAccess().getAlternatives_6()); }
	(rule__Device__Alternatives_6)
	{ after(grammarAccess.getDeviceAccess().getAlternatives_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Device__Group_6_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Device__Group_6_0__0__Impl
	rule__Device__Group_6_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group_6_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceAccess().getDeviceKeyword_6_0_0()); }
	'device'
	{ after(grammarAccess.getDeviceAccess().getDeviceKeyword_6_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group_6_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Device__Group_6_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group_6_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceAccess().getDevicesAssignment_6_0_1()); }
	(rule__Device__DevicesAssignment_6_0_1)
	{ after(grammarAccess.getDeviceAccess().getDevicesAssignment_6_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Device__Group_6_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Device__Group_6_1__0__Impl
	rule__Device__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group_6_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceAccess().getGroupKeyword_6_1_0()); }
	'group'
	{ after(grammarAccess.getDeviceAccess().getGroupKeyword_6_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group_6_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Device__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Group_6_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceAccess().getDevicesAssignment_6_1_1()); }
	(rule__Device__DevicesAssignment_6_1_1)
	{ after(grammarAccess.getDeviceAccess().getDevicesAssignment_6_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ServerTypes__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ServerTypes__Group__0__Impl
	rule__ServerTypes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ServerTypes__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServerTypesAccess().getServerTypesKeyword_0()); }
	'ServerTypes'
	{ after(grammarAccess.getServerTypesAccess().getServerTypesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ServerTypes__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ServerTypes__Group__1__Impl
	rule__ServerTypes__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ServerTypes__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServerTypesAccess().getTypesAssignment_1()); }
	(rule__ServerTypes__TypesAssignment_1)
	{ after(grammarAccess.getServerTypesAccess().getTypesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ServerTypes__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ServerTypes__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ServerTypes__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServerTypesAccess().getGroup_2()); }
	(rule__ServerTypes__Group_2__0)*
	{ after(grammarAccess.getServerTypesAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ServerTypes__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ServerTypes__Group_2__0__Impl
	rule__ServerTypes__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ServerTypes__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServerTypesAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getServerTypesAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ServerTypes__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ServerTypes__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ServerTypes__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServerTypesAccess().getTypesAssignment_2_1()); }
	(rule__ServerTypes__TypesAssignment_2_1)
	{ after(grammarAccess.getServerTypesAccess().getTypesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Server__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Server__Group__0__Impl
	rule__Server__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServerAccess().getServerKeyword_0()); }
	'Server'
	{ after(grammarAccess.getServerAccess().getServerKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Server__Group__1__Impl
	rule__Server__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServerAccess().getNameAssignment_1()); }
	(rule__Server__NameAssignment_1)
	{ after(grammarAccess.getServerAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Server__Group__2__Impl
	rule__Server__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServerAccess().getOfKeyword_2()); }
	'of'
	{ after(grammarAccess.getServerAccess().getOfKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Server__Group__3__Impl
	rule__Server__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServerAccess().getTypeKeyword_3()); }
	'type'
	{ after(grammarAccess.getServerAccess().getTypeKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Server__Group__4__Impl
	rule__Server__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServerAccess().getTypeAssignment_4()); }
	(rule__Server__TypeAssignment_4)
	{ after(grammarAccess.getServerAccess().getTypeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Server__Group__5__Impl
	rule__Server__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServerAccess().getListensKeyword_5()); }
	'listens'
	{ after(grammarAccess.getServerAccess().getListensKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Server__Group__6__Impl
	rule__Server__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServerAccess().getOnKeyword_6()); }
	'on'
	{ after(grammarAccess.getServerAccess().getOnKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Server__Group__7__Impl
	rule__Server__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServerAccess().getIpAssignment_7()); }
	(rule__Server__IpAssignment_7)
	{ after(grammarAccess.getServerAccess().getIpAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Server__Group__8__Impl
	rule__Server__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServerAccess().getAndKeyword_8()); }
	'and'
	{ after(grammarAccess.getServerAccess().getAndKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Server__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServerAccess().getPortAssignment_9()); }
	(rule__Server__PortAssignment_9)
	{ after(grammarAccess.getServerAccess().getPortAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DestinationTypes__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DestinationTypes__Group__0__Impl
	rule__DestinationTypes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DestinationTypes__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDestinationTypesAccess().getDestinationTypesKeyword_0()); }
	'DestinationTypes'
	{ after(grammarAccess.getDestinationTypesAccess().getDestinationTypesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DestinationTypes__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DestinationTypes__Group__1__Impl
	rule__DestinationTypes__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DestinationTypes__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDestinationTypesAccess().getTypesAssignment_1()); }
	(rule__DestinationTypes__TypesAssignment_1)
	{ after(grammarAccess.getDestinationTypesAccess().getTypesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DestinationTypes__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DestinationTypes__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DestinationTypes__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDestinationTypesAccess().getGroup_2()); }
	(rule__DestinationTypes__Group_2__0)*
	{ after(grammarAccess.getDestinationTypesAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DestinationTypes__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DestinationTypes__Group_2__0__Impl
	rule__DestinationTypes__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DestinationTypes__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDestinationTypesAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getDestinationTypesAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DestinationTypes__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DestinationTypes__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DestinationTypes__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDestinationTypesAccess().getTypesAssignment_2_1()); }
	(rule__DestinationTypes__TypesAssignment_2_1)
	{ after(grammarAccess.getDestinationTypesAccess().getTypesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Destination__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Destination__Group__0__Impl
	rule__Destination__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Destination__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDestinationAccess().getDestinationKeyword_0()); }
	'Destination'
	{ after(grammarAccess.getDestinationAccess().getDestinationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Destination__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Destination__Group__1__Impl
	rule__Destination__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Destination__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDestinationAccess().getNameAssignment_1()); }
	(rule__Destination__NameAssignment_1)
	{ after(grammarAccess.getDestinationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Destination__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Destination__Group__2__Impl
	rule__Destination__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Destination__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDestinationAccess().getOfKeyword_2()); }
	'of'
	{ after(grammarAccess.getDestinationAccess().getOfKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Destination__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Destination__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Destination__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDestinationAccess().getTypeAssignment_3()); }
	(rule__Destination__TypeAssignment_3)
	{ after(grammarAccess.getDestinationAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FetchData__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchData__Group__0__Impl
	rule__FetchData__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataAccess().getFetchKeyword_0()); }
	'Fetch'
	{ after(grammarAccess.getFetchDataAccess().getFetchKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchData__Group__1__Impl
	rule__FetchData__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataAccess().getDataKeyword_1()); }
	'data'
	{ after(grammarAccess.getFetchDataAccess().getDataKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchData__Group__2__Impl
	rule__FetchData__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataAccess().getFromKeyword_2()); }
	'from'
	{ after(grammarAccess.getFetchDataAccess().getFromKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchData__Group__3__Impl
	rule__FetchData__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataAccess().getAlternatives_3()); }
	(rule__FetchData__Alternatives_3)
	{ after(grammarAccess.getFetchDataAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchData__Group__4__Impl
	rule__FetchData__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataAccess().getForKeyword_4()); }
	'for'
	{ after(grammarAccess.getFetchDataAccess().getForKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchData__Group__5__Impl
	rule__FetchData__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataAccess().getDeviceKeyword_5()); }
	'device'
	{ after(grammarAccess.getFetchDataAccess().getDeviceKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchData__Group__6__Impl
	rule__FetchData__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataAccess().getDeviceAssignment_6()); }
	(rule__FetchData__DeviceAssignment_6)
	{ after(grammarAccess.getFetchDataAccess().getDeviceAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchData__Group__7__Impl
	rule__FetchData__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataAccess().getToKeyword_7()); }
	'to'
	{ after(grammarAccess.getFetchDataAccess().getToKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchData__Group__8__Impl
	rule__FetchData__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataAccess().getAlternatives_8()); }
	(rule__FetchData__Alternatives_8)
	{ after(grammarAccess.getFetchDataAccess().getAlternatives_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchData__Group__9__Impl
	rule__FetchData__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataAccess().getGroup_9()); }
	(rule__FetchData__Group_9__0)?
	{ after(grammarAccess.getFetchDataAccess().getGroup_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchData__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataAccess().getGroup_10()); }
	(rule__FetchData__Group_10__0)?
	{ after(grammarAccess.getFetchDataAccess().getGroup_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FetchData__Group_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchData__Group_3_0__0__Impl
	rule__FetchData__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataAccess().getTypeKeyword_3_0_0()); }
	'type'
	{ after(grammarAccess.getFetchDataAccess().getTypeKeyword_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchData__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataAccess().getFilterAssignment_3_0_1()); }
	(rule__FetchData__FilterAssignment_3_0_1)
	{ after(grammarAccess.getFetchDataAccess().getFilterAssignment_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FetchData__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchData__Group_3_1__0__Impl
	rule__FetchData__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataAccess().getGroupKeyword_3_1_0()); }
	'group'
	{ after(grammarAccess.getFetchDataAccess().getGroupKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchData__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataAccess().getFilterAssignment_3_1_1()); }
	(rule__FetchData__FilterAssignment_3_1_1)
	{ after(grammarAccess.getFetchDataAccess().getFilterAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FetchData__Group_8_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchData__Group_8_0__0__Impl
	rule__FetchData__Group_8_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group_8_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataAccess().getDestinationKeyword_8_0_0()); }
	'destination'
	{ after(grammarAccess.getFetchDataAccess().getDestinationKeyword_8_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group_8_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchData__Group_8_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group_8_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataAccess().getDestinationAssignment_8_0_1()); }
	(rule__FetchData__DestinationAssignment_8_0_1)
	{ after(grammarAccess.getFetchDataAccess().getDestinationAssignment_8_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FetchData__Group_8_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchData__Group_8_1__0__Impl
	rule__FetchData__Group_8_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group_8_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataAccess().getServerKeyword_8_1_0()); }
	'server'
	{ after(grammarAccess.getFetchDataAccess().getServerKeyword_8_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group_8_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchData__Group_8_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group_8_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataAccess().getDestinationAssignment_8_1_1()); }
	(rule__FetchData__DestinationAssignment_8_1_1)
	{ after(grammarAccess.getFetchDataAccess().getDestinationAssignment_8_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FetchData__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchData__Group_9__0__Impl
	rule__FetchData__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataAccess().getConditionKeyword_9_0()); }
	('condition')
	{ after(grammarAccess.getFetchDataAccess().getConditionKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchData__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataAccess().getConditionAssignment_9_1()); }
	(rule__FetchData__ConditionAssignment_9_1)
	{ after(grammarAccess.getFetchDataAccess().getConditionAssignment_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FetchData__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchData__Group_10__0__Impl
	rule__FetchData__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataAccess().getTriggeredKeyword_10_0()); }
	('triggered')
	{ after(grammarAccess.getFetchDataAccess().getTriggeredKeyword_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchData__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataAccess().getTriggeredAssignment_10_1()); }
	(rule__FetchData__TriggeredAssignment_10_1)
	{ after(grammarAccess.getFetchDataAccess().getTriggeredAssignment_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FetchDataExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchDataExpression__Group__0__Impl
	rule__FetchDataExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchDataExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataExpressionAccess().getEveryKeyword_0()); }
	'every'
	{ after(grammarAccess.getFetchDataExpressionAccess().getEveryKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchDataExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchDataExpression__Group__1__Impl
	rule__FetchDataExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchDataExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataExpressionAccess().getDurationAssignment_1()); }
	(rule__FetchDataExpression__DurationAssignment_1)
	{ after(grammarAccess.getFetchDataExpressionAccess().getDurationAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchDataExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchDataExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchDataExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataExpressionAccess().getTimeUnitAssignment_2()); }
	(rule__FetchDataExpression__TimeUnitAssignment_2)
	{ after(grammarAccess.getFetchDataExpressionAccess().getTimeUnitAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FetchDataCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchDataCondition__Group__0__Impl
	rule__FetchDataCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchDataCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataConditionAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getFetchDataConditionAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchDataCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchDataCondition__Group__1__Impl
	rule__FetchDataCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchDataCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataConditionAccess().getGroup_1()); }
	(rule__FetchDataCondition__Group_1__0)
	{ after(grammarAccess.getFetchDataConditionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchDataCondition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchDataCondition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchDataCondition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataConditionAccess().getGroup_2()); }
	(rule__FetchDataCondition__Group_2__0)?
	{ after(grammarAccess.getFetchDataConditionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FetchDataCondition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchDataCondition__Group_1__0__Impl
	rule__FetchDataCondition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchDataCondition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataConditionAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getFetchDataConditionAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchDataCondition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchDataCondition__Group_1__1__Impl
	rule__FetchDataCondition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchDataCondition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataConditionAccess().getConditionAssignment_1_1()); }
	(rule__FetchDataCondition__ConditionAssignment_1_1)
	{ after(grammarAccess.getFetchDataConditionAccess().getConditionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchDataCondition__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchDataCondition__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchDataCondition__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataConditionAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getFetchDataConditionAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FetchDataCondition__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchDataCondition__Group_2__0__Impl
	rule__FetchDataCondition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchDataCondition__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataConditionAccess().getElseKeyword_2_0()); }
	('else')
	{ after(grammarAccess.getFetchDataConditionAccess().getElseKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchDataCondition__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FetchDataCondition__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchDataCondition__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFetchDataConditionAccess().getElseAssignment_2_1()); }
	(rule__FetchDataCondition__ElseAssignment_2_1)
	{ after(grammarAccess.getFetchDataConditionAccess().getElseAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrCondition__Group__0__Impl
	rule__OrCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrConditionAccess().getAndConditionParserRuleCall_0()); }
	ruleAndCondition
	{ after(grammarAccess.getOrConditionAccess().getAndConditionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrCondition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrConditionAccess().getGroup_1()); }
	(rule__OrCondition__Group_1__0)*
	{ after(grammarAccess.getOrConditionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrCondition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrCondition__Group_1__0__Impl
	rule__OrCondition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrCondition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrConditionAccess().getOrConditionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getOrConditionAccess().getOrConditionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrCondition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrCondition__Group_1__1__Impl
	rule__OrCondition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrCondition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrConditionAccess().getVerticalLineVerticalLineKeyword_1_1()); }
	'||'
	{ after(grammarAccess.getOrConditionAccess().getVerticalLineVerticalLineKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrCondition__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrCondition__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrCondition__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrConditionAccess().getRightAssignment_1_2()); }
	(rule__OrCondition__RightAssignment_1_2)
	{ after(grammarAccess.getOrConditionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndCondition__Group__0__Impl
	rule__AndCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndConditionAccess().getComparisonConditionParserRuleCall_0()); }
	ruleComparisonCondition
	{ after(grammarAccess.getAndConditionAccess().getComparisonConditionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndCondition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndConditionAccess().getGroup_1()); }
	(rule__AndCondition__Group_1__0)*
	{ after(grammarAccess.getAndConditionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndCondition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndCondition__Group_1__0__Impl
	rule__AndCondition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndCondition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndConditionAccess().getAndConditionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAndConditionAccess().getAndConditionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndCondition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndCondition__Group_1__1__Impl
	rule__AndCondition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndCondition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndConditionAccess().getAmpersandAmpersandKeyword_1_1()); }
	'&&'
	{ after(grammarAccess.getAndConditionAccess().getAmpersandAmpersandKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndCondition__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndCondition__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndCondition__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndConditionAccess().getRightAssignment_1_2()); }
	(rule__AndCondition__RightAssignment_1_2)
	{ after(grammarAccess.getAndConditionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonCondition__Group__0__Impl
	rule__ComparisonCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonConditionAccess().getPrimaryConditionParserRuleCall_0()); }
	rulePrimaryCondition
	{ after(grammarAccess.getComparisonConditionAccess().getPrimaryConditionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonCondition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonConditionAccess().getGroup_1()); }
	(rule__ComparisonCondition__Group_1__0)*
	{ after(grammarAccess.getComparisonConditionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonCondition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonCondition__Group_1__0__Impl
	rule__ComparisonCondition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonCondition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonConditionAccess().getComparisonConditionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getComparisonConditionAccess().getComparisonConditionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonCondition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonCondition__Group_1__1__Impl
	rule__ComparisonCondition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonCondition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonConditionAccess().getOperatorAssignment_1_1()); }
	(rule__ComparisonCondition__OperatorAssignment_1_1)
	{ after(grammarAccess.getComparisonConditionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonCondition__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonCondition__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonCondition__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonConditionAccess().getRightAssignment_1_2()); }
	(rule__ComparisonCondition__RightAssignment_1_2)
	{ after(grammarAccess.getComparisonConditionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryCondition__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryCondition__Group_0__0__Impl
	rule__PrimaryCondition__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryCondition__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryConditionAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getPrimaryConditionAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryCondition__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryCondition__Group_0__1__Impl
	rule__PrimaryCondition__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryCondition__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryConditionAccess().getConditionParserRuleCall_0_1()); }
	ruleCondition
	{ after(grammarAccess.getPrimaryConditionAccess().getConditionParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryCondition__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryCondition__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryCondition__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryConditionAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getPrimaryConditionAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralBoolean__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralBoolean__Group_0__0__Impl
	rule__LiteralBoolean__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralBoolean__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralBooleanAccess().getLiteralBoolAction_0_0()); }
	()
	{ after(grammarAccess.getLiteralBooleanAccess().getLiteralBoolAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralBoolean__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralBoolean__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralBoolean__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralBooleanAccess().getValueAssignment_0_1()); }
	(rule__LiteralBoolean__ValueAssignment_0_1)
	{ after(grammarAccess.getLiteralBooleanAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralBoolean__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralBoolean__Group_1__0__Impl
	rule__LiteralBoolean__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralBoolean__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralBooleanAccess().getLiteralBoolAction_1_0()); }
	()
	{ after(grammarAccess.getLiteralBooleanAccess().getLiteralBoolAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralBoolean__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralBoolean__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralBoolean__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralBooleanAccess().getValueAssignment_1_1()); }
	(rule__LiteralBoolean__ValueAssignment_1_1)
	{ after(grammarAccess.getLiteralBooleanAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralInteger__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralInteger__Group__0__Impl
	rule__LiteralInteger__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralInteger__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralIntegerAccess().getLiteralNumberAction_0()); }
	()
	{ after(grammarAccess.getLiteralIntegerAccess().getLiteralNumberAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralInteger__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LiteralInteger__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralInteger__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralIntegerAccess().getValueAssignment_1()); }
	(rule__LiteralInteger__ValueAssignment_1)
	{ after(grammarAccess.getLiteralIntegerAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ip__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ip__Group__0__Impl
	rule__Ip__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ip__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIpAccess().getIpAction_0()); }
	()
	{ after(grammarAccess.getIpAccess().getIpAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ip__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ip__Group__1__Impl
	rule__Ip__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ip__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIpAccess().getIpAssignment_1()); }
	(rule__Ip__IpAssignment_1)
	{ after(grammarAccess.getIpAccess().getIpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ip__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ip__Group__2__Impl
	rule__Ip__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ip__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIpAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getIpAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ip__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ip__Group__3__Impl
	rule__Ip__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Ip__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIpAccess().getIpAssignment_3()); }
	(rule__Ip__IpAssignment_3)
	{ after(grammarAccess.getIpAccess().getIpAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ip__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ip__Group__4__Impl
	rule__Ip__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Ip__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIpAccess().getFullStopKeyword_4()); }
	'.'
	{ after(grammarAccess.getIpAccess().getFullStopKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ip__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ip__Group__5__Impl
	rule__Ip__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Ip__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIpAccess().getIpAssignment_5()); }
	(rule__Ip__IpAssignment_5)
	{ after(grammarAccess.getIpAccess().getIpAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ip__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ip__Group__6__Impl
	rule__Ip__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Ip__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIpAccess().getFullStopKeyword_6()); }
	'.'
	{ after(grammarAccess.getIpAccess().getFullStopKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ip__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ip__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ip__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIpAccess().getIpAssignment_7()); }
	(rule__Ip__IpAssignment_7)
	{ after(grammarAccess.getIpAccess().getIpAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Portnumber__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Portnumber__Group__0__Impl
	rule__Portnumber__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Portnumber__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortnumberAccess().getPortnumberAction_0()); }
	()
	{ after(grammarAccess.getPortnumberAccess().getPortnumberAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portnumber__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Portnumber__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Portnumber__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortnumberAccess().getNumberAssignment_1()); }
	(rule__Portnumber__NumberAssignment_1)
	{ after(grammarAccess.getPortnumberAccess().getNumberAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__System__SystemAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemAccess().getSystemAlternatives_0()); }
		(rule__System__SystemAlternatives_0)
		{ after(grammarAccess.getSystemAccess().getSystemAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorType__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorTypeAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getSensorTypeAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorTypes__TypesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorTypesAccess().getTypesSensorTypeParserRuleCall_1_0()); }
		ruleSensorType
		{ after(grammarAccess.getSensorTypesAccess().getTypesSensorTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorTypes__TypesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorTypesAccess().getTypesSensorTypeParserRuleCall_2_1_0()); }
		ruleSensorType
		{ after(grammarAccess.getSensorTypesAccess().getTypesSensorTypeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSensorAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__TypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getTypeSensorTypeCrossReference_4_0()); }
		(
			{ before(grammarAccess.getSensorAccess().getTypeSensorTypeIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSensorAccess().getTypeSensorTypeIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getSensorAccess().getTypeSensorTypeCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorGroup__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorGroupAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSensorGroupAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorGroup__SensorsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorGroupAccess().getSensorsSensorCrossReference_3_0()); }
		(
			{ before(grammarAccess.getSensorGroupAccess().getSensorsSensorIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSensorGroupAccess().getSensorsSensorIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getSensorGroupAccess().getSensorsSensorCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorGroup__SensorsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorGroupAccess().getSensorsSensorCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getSensorGroupAccess().getSensorsSensorIDTerminalRuleCall_4_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSensorGroupAccess().getSensorsSensorIDTerminalRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getSensorGroupAccess().getSensorsSensorCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorGetMethod__MethodAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorGetMethodAccess().getMethodMethodParserRuleCall_1_0()); }
		ruleMethod
		{ after(grammarAccess.getSensorGetMethodAccess().getMethodMethodParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorGetMethod__TypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorGetMethodAccess().getTypeSensorTypeCrossReference_4_0()); }
		(
			{ before(grammarAccess.getSensorGetMethodAccess().getTypeSensorTypeIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSensorGetMethodAccess().getTypeSensorTypeIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getSensorGetMethodAccess().getTypeSensorTypeCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ParametersAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getParametersIDTerminalRuleCall_2_0_0()); }
		RULE_ID
		{ after(grammarAccess.getMethodAccess().getParametersIDTerminalRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ParametersAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getParametersIDTerminalRuleCall_2_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMethodAccess().getParametersIDTerminalRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceType__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceTypeAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getDeviceTypeAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceTypes__TypesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceTypesAccess().getTypesDeviceTypeParserRuleCall_1_0()); }
		ruleDeviceType
		{ after(grammarAccess.getDeviceTypesAccess().getTypesDeviceTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceTypes__TypesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceTypesAccess().getTypesDeviceTypeParserRuleCall_2_1_0()); }
		ruleDeviceType
		{ after(grammarAccess.getDeviceTypesAccess().getTypesDeviceTypeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDeviceAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__TypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceAccess().getTypeDeviceTypeCrossReference_4_0()); }
		(
			{ before(grammarAccess.getDeviceAccess().getTypeDeviceTypeIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDeviceAccess().getTypeDeviceTypeIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getDeviceAccess().getTypeDeviceTypeCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__DevicesAssignment_6_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceAccess().getDevicesDeviceCrossReference_6_0_1_0()); }
		(
			{ before(grammarAccess.getDeviceAccess().getDevicesDeviceIDTerminalRuleCall_6_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDeviceAccess().getDevicesDeviceIDTerminalRuleCall_6_0_1_0_1()); }
		)
		{ after(grammarAccess.getDeviceAccess().getDevicesDeviceCrossReference_6_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__DevicesAssignment_6_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceAccess().getDevicesSensorGroupCrossReference_6_1_1_0()); }
		(
			{ before(grammarAccess.getDeviceAccess().getDevicesSensorGroupIDTerminalRuleCall_6_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDeviceAccess().getDevicesSensorGroupIDTerminalRuleCall_6_1_1_0_1()); }
		)
		{ after(grammarAccess.getDeviceAccess().getDevicesSensorGroupCrossReference_6_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ServerType__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getServerTypeAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getServerTypeAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ServerTypes__TypesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getServerTypesAccess().getTypesServerTypeParserRuleCall_1_0()); }
		ruleServerType
		{ after(grammarAccess.getServerTypesAccess().getTypesServerTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ServerTypes__TypesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getServerTypesAccess().getTypesServerTypeParserRuleCall_2_1_0()); }
		ruleServerType
		{ after(grammarAccess.getServerTypesAccess().getTypesServerTypeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getServerAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getServerAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__TypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getServerAccess().getTypeServerTypeCrossReference_4_0()); }
		(
			{ before(grammarAccess.getServerAccess().getTypeServerTypeIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getServerAccess().getTypeServerTypeIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getServerAccess().getTypeServerTypeCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__IpAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getServerAccess().getIpIpParserRuleCall_7_0()); }
		ruleIp
		{ after(grammarAccess.getServerAccess().getIpIpParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Server__PortAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getServerAccess().getPortPortnumberParserRuleCall_9_0()); }
		rulePortnumber
		{ after(grammarAccess.getServerAccess().getPortPortnumberParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DestinationType__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDestinationTypeAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getDestinationTypeAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DestinationTypes__TypesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDestinationTypesAccess().getTypesDestinationTypeParserRuleCall_1_0()); }
		ruleDestinationType
		{ after(grammarAccess.getDestinationTypesAccess().getTypesDestinationTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DestinationTypes__TypesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDestinationTypesAccess().getTypesDestinationTypeParserRuleCall_2_1_0()); }
		ruleDestinationType
		{ after(grammarAccess.getDestinationTypesAccess().getTypesDestinationTypeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Destination__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDestinationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDestinationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Destination__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDestinationAccess().getTypeDestinationTypeCrossReference_3_0()); }
		(
			{ before(grammarAccess.getDestinationAccess().getTypeDestinationTypeIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDestinationAccess().getTypeDestinationTypeIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getDestinationAccess().getTypeDestinationTypeCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__FilterAssignment_3_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFetchDataAccess().getFilterSensorTypeCrossReference_3_0_1_0()); }
		(
			{ before(grammarAccess.getFetchDataAccess().getFilterSensorTypeIDTerminalRuleCall_3_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFetchDataAccess().getFilterSensorTypeIDTerminalRuleCall_3_0_1_0_1()); }
		)
		{ after(grammarAccess.getFetchDataAccess().getFilterSensorTypeCrossReference_3_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__FilterAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFetchDataAccess().getFilterSensorGroupCrossReference_3_1_1_0()); }
		(
			{ before(grammarAccess.getFetchDataAccess().getFilterSensorGroupIDTerminalRuleCall_3_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFetchDataAccess().getFilterSensorGroupIDTerminalRuleCall_3_1_1_0_1()); }
		)
		{ after(grammarAccess.getFetchDataAccess().getFilterSensorGroupCrossReference_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__DeviceAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFetchDataAccess().getDeviceDeviceCrossReference_6_0()); }
		(
			{ before(grammarAccess.getFetchDataAccess().getDeviceDeviceIDTerminalRuleCall_6_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFetchDataAccess().getDeviceDeviceIDTerminalRuleCall_6_0_1()); }
		)
		{ after(grammarAccess.getFetchDataAccess().getDeviceDeviceCrossReference_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__DestinationAssignment_8_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFetchDataAccess().getDestinationDestinationCrossReference_8_0_1_0()); }
		(
			{ before(grammarAccess.getFetchDataAccess().getDestinationDestinationIDTerminalRuleCall_8_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFetchDataAccess().getDestinationDestinationIDTerminalRuleCall_8_0_1_0_1()); }
		)
		{ after(grammarAccess.getFetchDataAccess().getDestinationDestinationCrossReference_8_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__DestinationAssignment_8_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFetchDataAccess().getDestinationServerCrossReference_8_1_1_0()); }
		(
			{ before(grammarAccess.getFetchDataAccess().getDestinationServerIDTerminalRuleCall_8_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFetchDataAccess().getDestinationServerIDTerminalRuleCall_8_1_1_0_1()); }
		)
		{ after(grammarAccess.getFetchDataAccess().getDestinationServerCrossReference_8_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__ConditionAssignment_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFetchDataAccess().getConditionFetchDataConditionParserRuleCall_9_1_0()); }
		ruleFetchDataCondition
		{ after(grammarAccess.getFetchDataAccess().getConditionFetchDataConditionParserRuleCall_9_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchData__TriggeredAssignment_10_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFetchDataAccess().getTriggeredFetchDataExpressionParserRuleCall_10_1_0()); }
		ruleFetchDataExpression
		{ after(grammarAccess.getFetchDataAccess().getTriggeredFetchDataExpressionParserRuleCall_10_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchDataExpression__DurationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFetchDataExpressionAccess().getDurationTimeParserRuleCall_1_0()); }
		ruleTime
		{ after(grammarAccess.getFetchDataExpressionAccess().getDurationTimeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchDataExpression__TimeUnitAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFetchDataExpressionAccess().getTimeUnitTimeUnitParserRuleCall_2_0()); }
		ruleTimeUnit
		{ after(grammarAccess.getFetchDataExpressionAccess().getTimeUnitTimeUnitParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchDataCondition__ConditionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFetchDataConditionAccess().getConditionConditionParserRuleCall_1_1_0()); }
		ruleCondition
		{ after(grammarAccess.getFetchDataConditionAccess().getConditionConditionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FetchDataCondition__ElseAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFetchDataConditionAccess().getElseFetchDataConditionParserRuleCall_2_1_0()); }
		ruleFetchDataCondition
		{ after(grammarAccess.getFetchDataConditionAccess().getElseFetchDataConditionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrCondition__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrConditionAccess().getRightAndConditionParserRuleCall_1_2_0()); }
		ruleAndCondition
		{ after(grammarAccess.getOrConditionAccess().getRightAndConditionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndCondition__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndConditionAccess().getRightComparisonConditionParserRuleCall_1_2_0()); }
		ruleComparisonCondition
		{ after(grammarAccess.getAndConditionAccess().getRightComparisonConditionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonCondition__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonConditionAccess().getOperatorAlternatives_1_1_0()); }
		(rule__ComparisonCondition__OperatorAlternatives_1_1_0)
		{ after(grammarAccess.getComparisonConditionAccess().getOperatorAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonCondition__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonConditionAccess().getRightPrimaryConditionParserRuleCall_1_2_0()); }
		rulePrimaryCondition
		{ after(grammarAccess.getComparisonConditionAccess().getRightPrimaryConditionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralBoolean__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralBooleanAccess().getValueTrueKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getLiteralBooleanAccess().getValueTrueKeyword_0_1_0()); }
			'true'
			{ after(grammarAccess.getLiteralBooleanAccess().getValueTrueKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getLiteralBooleanAccess().getValueTrueKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralBoolean__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralBooleanAccess().getValueFalseKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getLiteralBooleanAccess().getValueFalseKeyword_1_1_0()); }
			'false'
			{ after(grammarAccess.getLiteralBooleanAccess().getValueFalseKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getLiteralBooleanAccess().getValueFalseKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralInteger__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralIntegerAccess().getValueINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getLiteralIntegerAccess().getValueINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ip__IpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIpAccess().getIpINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getIpAccess().getIpINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ip__IpAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIpAccess().getIpINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getIpAccess().getIpINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ip__IpAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIpAccess().getIpINTTerminalRuleCall_5_0()); }
		RULE_INT
		{ after(grammarAccess.getIpAccess().getIpINTTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ip__IpAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIpAccess().getIpINTTerminalRuleCall_7_0()); }
		RULE_INT
		{ after(grammarAccess.getIpAccess().getIpINTTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Portnumber__NumberAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortnumberAccess().getNumberINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getPortnumberAccess().getNumberINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Time__TimeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeAccess().getTimeINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getTimeAccess().getTimeINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
